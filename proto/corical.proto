syntax = "proto3";

package corical;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

service Corical {
  rpc ComputeTTS(ComputeTTSReq) returns (ComputeRes) {
    option (google.api.http) = {
      post : "/v1/compute_tts"
      body : "*"
    };
  }

  rpc ComputePfizer(ComputePfizerReq) returns (ComputeRes) {
    option (google.api.http) = {
      post : "/v1/compute_pfizer"
      body : "*"
    };
  }

  rpc ComputeLongCovid(ComputeLongCovidReq) returns (ComputeRes) {
    option (google.api.http) = {
      post : "/v1/compute_long_covid"
      body : "*"
    };
  }

  rpc ComputeCombined(ComputeCombinedReq) returns (ComputeRes) {
    option (google.api.http) = {
      post : "/v1/compute_combined"
      body : "*"
    };
  }

  rpc ComputePfizerChildren(ComputePfizerReq) returns (ComputeRes) {
    option (google.api.http) = {
      post : "/v1/compute_pfizer_children"
      body : "*"
    };
  }
}

/// TTS

message ComputeTTSReq {
  string variant = 1;
  uint32 age = 2;
  string sex = 3;
  string vaccine = 5;
  string transmission = 6;

  uint32 compute_count = 7;
}

/// Pfizer

message ComputePfizerReq {
  string dose = 1;
  uint32 age = 2;
  string ct = 3;
  string sex = 4;
}

/// Long Covid

message ComputeLongCovidReq {
  string dose = 1;
  uint32 age = 2;
  string comor = 3;
  string sex = 4;
  sting infection = 5;
}

/// Combined 
message ComputeCombinedReq {
  string dose_number = 1;
  uint32 age = 2;
  string ct = 3;
  string sex = 4;
  string dose_2 = 5;
  string dose_3 = 6;
  string dose_time = 7;
  
}

/// output

message Message {
  string heading = 1;
  string text = 2;
  string severity = 3;
}

message Risk {
  string name = 1;
  double risk = 2;
  string comment = 3;
}

message OutputGroup {
  string heading = 1;
  string explanation = 2;
  repeated Risk risks = 3;
}

message BarGraphRisk {
  string label = 1;
  double risk = 2;
  // so we can fade them out
  bool is_relatable = 3;
  bool is_other_shot = 4;
  // what appears on the right of the bar
  string bar_text = 5; 
  string hover_text = 6; 
}

message BarGraph {
  string title = 1;
  string subtitle = 2;
  repeated BarGraphRisk risks = 3;
}

message PrintableButton {
  string text = 1;
  string url = 2;
}

message ComputeRes {
  string scenario_description = 1;
  repeated BarGraph bar_graphs = 2;
  repeated Message messages = 3;
  repeated OutputGroup output_groups = 4;
  PrintableButton printable = 5;
  bool success = 98;
  string msg = 99;
  string vaccine_type = 6;
}

/// Binlog

message BinLog {
  google.protobuf.Timestamp time = 1;
  ComputeTTSReq tts_req = 2;
  ComputePfizerReq pfizer_req = 5;
  ComputeLongCovidReq longcovid_req = 7;
  ComputeCombinedReq combined_req = 6;
  ComputeRes res = 3;
  double duration_ms = 4;
}
